buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
	}
}
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

archivesBaseName = "${mod_name}-forge-${minecraft_version}"

minecraft {
	mappings channel: 'official', version: minecraft_version
	
	if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
		// This location is hardcoded in Forge and can not be changed.
		// https://github.com/MinecraftForge/MinecraftForge/blob/be1698bb1554f9c8fa2f58e32b9ab70bc4385e60/fmlloader/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModFile.java#L123
		accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
		project.logger.debug('Forge Access Transformers are enabled for this project.')
	}

/* TODO Requires journeymap whose mixins don't work here
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'
			property 'forge.enabledGameTestNamespaces', 'journeypac'

			mods {
				journeypac {
					source sourceSets.main
				}
			}
		}
	}
*/
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	compileOnly project(":common")
	implementation group: 'curse.maven', name: 'openpac-636608', version: '4021875', changing: true
	compileOnly group: 'info.journeymap', name: 'journeymap-api', version: '1.19.1-1.9-SNAPSHOT', changing: true
}

tasks.withType(JavaCompile) {
	source(project(":common").sourceSets.main.allSource)
}

processResources {
	from project(":common").sourceSets.main.resources

	filesMatching("META-INF/mods.toml") {
		expand "mod_id": project.mod_id, "version": project.version,
			"mod_name": project.mod_name, "mod_author": project.mod_author
	}
}

jar.finalizedBy('reobfJar')
